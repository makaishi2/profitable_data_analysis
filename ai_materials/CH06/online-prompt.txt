これから依頼する内容に対して、以下のルールでデータ分析を願いします
(1)生成されるPythonコードのコメントは日本語にする
(2)「データの先頭5行を表示してください」のような指示に対して以下の対応をする
(2-A) 生成するPythonコード実装では、最後の行をdf.head()の形式にする
(2-B) df.head()の結果はをブラウザ画面にも表示する。この段階で、初めて整形表示する

(online-retail-jp.csv)
添付のcsvファイルをデータフレームdfに読み込んでください
先頭５行を表示してください

dfの欠損値を確認してください

データ件数を国別に集計し、Top 10を表示してください

発注番号の最初の1文字を抽出し「発注種別」列を作ってください
先頭５行を表示してください

発注種別が「5」の行が新規発注です。
発注情報から新規発注のみを選択し、結果をdf2に代入してください
先頭５行を表示してください

df2の中で国名がフランスの行のみを選択し、結果をdf3に代入します
df3の件数を調べてください

df3に対して発注番号と商品番号をキーに商品個数を集計し、結果をw1に代入します
発注番号と商品番号はインデックスの状態のままにしてください
w1の先頭5行を表示してください

商品番号を列に移動します
NaN値の要素の値は全部0にします
結果はw2に代入し先頭5行を表示してください

w2の各要素に対して値が正の場合はTrue、0の場合はFalseの値を取るデータフレームを作ります
結果をbasket_dfに代入し、その先頭5行を表示してください

df2に対して次の加工を行い、結果をw3に代入します
・商品番号と商品説明のみ抽出し、ユニーク処理を実施
・すべての要素を文字列に変換
・商品番号をインデックスにする
w3の先頭5行を表示してください

w3に対して以下の処理を行います
先頭5つのインデックスを抽出
w3に対してこのインデックスを持つ行を抽出し、結果全体を表示してください

w3のうち、商品名称がすべて大文字のもののみを抽出し、w4に代入します
w4に対して先頭5つのインデックスを抽出します
w4に対してこのインデックスを持つ行を抽出し、結果全体を表示してください

w4に対して商品説明の長さを計算し、新しい列「文字数」とします
計算結果をw5に代入し、先頭5行を表示してください

w5に対して、一つの商品番号に複数の名称があるものは一番長いものを選択します
一つの商品番号に対して必ず一つの名称のみが対応するようにしてください
選択した結果は、商品番号をキーとする辞書として、結果はitem_dictに代入します
item_dictの先頭5行を表示してください

(mlxtend-0.23.1-py3-none-any.whl)
添付のファイルを!pipコマンドで導入し、mlxtendライブラリから、association_rulesとapprioriをインポートします

basket_dfを対象に、 min_support=0.06,　use_colnames=Trueのパラメータ値でアプリオリ分析を行い、結果をfreq_item1に代入します
freq_item1の件数を表示してください
また、freq_item1をsupport値で逆順ソートした先頭10行を表示してください

freq_item1に対して、metric="lift", min_threshold=1の条件でアソシエーションルールを抽出し、a_rule1に代入します
a_rule1の件数を表示してください
また、a_rule1をlift値で逆順ソートした先頭10行を表示してください

上記リストに含まれている商品コードに対応した商品名をitem_dictを用いて調べてください

(japanize_matplotlib-1.1.3-py3-none-any.whl)
a_rule1で示された関係のある商品間を関係グラフで図示してください
文字化けしないよう、添付のライブラリを!pipコマンドで導入してからグラフ表示してください

このデータは、イギリスのギフトグッズを主な商品とするeコマース会社の発注情報です
今回抽出された商品間の関係を活用したマーケティング施策を提案してください

